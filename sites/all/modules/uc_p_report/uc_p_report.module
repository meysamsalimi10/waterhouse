<?php
/**

 */
function uc_p_report_menu() {
  $items = array();

  $items['node/%/sale_report'] = array(
    'title' => 'گزارش فروش',
    'description' => 'View reports of users who purchased specific products',
    'page callback' => 'uc_p_report_report',
    'page arguments' => array(1),
    'access callback' => 'uc_p_report_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100,
  );

  return $items;
}

/**
* Access callback 
*/
function uc_p_report_access($nid) {
  $node = node_load($nid);
  global $user;
  if (user_has_role(4 , $user) || user_has_role(3 , $user) ) {
		return TRUE;
  }
  return FALSE;
}

function uc_p_report_report($nid) {

	$product_id = $nid;

	if ($nid>=1){
		$node = node_load($product_id);
		global $user;
		$output = "";
		if(!user_access('view all who bought what') && !(user_access('view own who bought what') && $node->uid==$user->uid) ){
			drupal_set_message('You are not authorized to view who bought that item.  Please contact your site or shop administrator', 'warning');
			return drupal_access_denied();
		}

		$tql =	"SELECT COUNT({uc_order_products}.qty) AS ordcount, SUM({uc_order_products}.qty) AS grandtotal FROM {uc_order_products}" .
		" JOIN {uc_orders} ON {uc_order_products}.order_id = {uc_orders}.order_id " . 
		" AND {uc_order_products}.nid  =  :product_id  WHERE order_status <> 'in_checkout' AND order_status <> 'canceled' AND order_status <> 'abandoned' " ;

		$tquery = db_query($tql,array(':product_id'=>$product_id));

		foreach ($tquery as $tresult) {
			$output .= '<h3>' . l($node->title , 'node/' . $node->nid) . '</br>' .t('$grandtotal sold in $ordcount orders', array('$grandtotal' => $tresult->grandtotal , '$ordcount' => $tresult->ordcount)) ."</h3>";
		}

		$header = array( //thanks to blackice78 for this code fix
		array('data' => t('Qty'),   'field' => 'qty',   'sql_field' => "{uc_order_products}.qty"),
		array('data' => t('name and family'), 'field' => 'nameandfamily', 'sql_field' => "names.field_nameandfamily_value"),
		array('data' => t('ncode'), 'field' => 'ncode', 'sql_field' => "ncode.field_ncode_value"),
		array('data' => t('phone'), 'field' => 'phone', 'sql_field' => "phone.field_phone_value"),
		array('data' => t('Username'), 'field' => 'name', 'sql_field' => "users.name"),
		array('data' => t('Email'), 'field' => 'email', 'sql_field' => "{uc_orders}.primary_email"),
		array('data' => t('Price'), 'field' => 'price', 'sql_field' => "{uc_order_products}.price"),
		array('data' => t('Total'), 'field' => 'total', 'sql_field' => "({uc_order_products}.price * {uc_order_products}.qty)"),
		array('data' => t('Date'),  'field' => 'date',  'sql_field' => "{uc_orders}.created"),
		array('data' => t('Status'),'field' => 'status','sql_field' => "{uc_orders}.order_status"),
		array('data' => t('ID'),    'field' => 'id',    'sql_field' => "{uc_orders}.order_id"),
		);

		$sqsel = "  "; //now build the sql query
		foreach($header as $hval){
			$sqsel .= $hval['sql_field'] . " AS " . $hval['field'];
			$sqsel .= ", ";
		}
		$sqsel .=   "{uc_orders}.uid" .  " AS uid , {uc_orders}.*,  uccb.country_name AS bill_country, uccs.country_name AS ship_country, " ;
		$sqsel .=   "uccbz.zone_code AS bill_zone, uccsz.zone_code AS ship_zone, names.field_nameandfamily_value AS nameandf, " ;
		$sqsel .=   "ncode.field_ncode_value AS nationcode, " ;
		$sqsel .=   "phone.field_phone_value AS phonenumber, " ;

	 $sqsel .=   "{uc_order_products}.data AS orderdata ";	// this is to collect the raw attribute data and also not to have a comma at the end
	 $sql = "SELECT  $sqsel FROM {uc_orders} ".
	  		 " JOIN {uc_order_products}" . 
			 " ON {uc_order_products}.order_id = {uc_orders}.order_id " . 
			 " AND {uc_order_products}.nid  =  :product_id " .
			 " LEFT JOIN {uc_countries} uccb ON {uc_orders}.billing_country = uccb.country_id " . 
			 " LEFT JOIN {uc_countries} uccs ON {uc_orders}.delivery_country = uccs.country_id " .
 			 " LEFT JOIN {uc_zones} uccbz ON {uc_orders}.billing_country = uccbz.zone_country_id AND {uc_orders}.billing_zone = uccbz.zone_id " .
			 " LEFT JOIN {uc_zones} uccsz ON {uc_orders}.delivery_country = uccsz.zone_country_id AND {uc_orders}.delivery_zone = uccsz.zone_id "  .
			 " LEFT JOIN {field_data_field_nameandfamily} names ON {uc_orders}.uid = names.entity_id AND names.entity_type = 'user' " .
			 " LEFT JOIN {field_data_field_ncode} ncode ON {uc_orders}.uid = ncode.entity_id AND ncode.entity_type = 'user' " .
			 " LEFT JOIN {field_data_field_phone} phone ON {uc_orders}.uid = phone.entity_id AND phone.entity_type = 'user' " .
			 " LEFT JOIN {users} users ON {uc_orders}.uid = users.uid"  ;
			 
	 $sql .= " WHERE order_status <> 'in_checkout' AND order_status <> 'canceled' AND order_status <> 'abandoned' ";
	 $customers = db_query($sql,array(":product_id"=>$product_id));

	 if (module_exists('uc_attribute')){
	 	//Collect and unserialize the attributes.  First, the names
	 	$attsql = "SELECT att.aid, att.ordering, att.name, IF(LENGTH(uca.label)>0,uca.label, att.name) AS label, uca.nid FROM {uc_attributes} att
		   JOIN {uc_product_attributes} uca ON uca.aid=att.aid AND nid = :d Order By ordering, name";
	 	$attresults = (db_query($attsql, array(":d"=>$product_id)));

	 	foreach ($attresults as $attrow) {
	 		$header[]=array('data'=>t($attrow->label));
	 		$attrlist[] = array('data'=>t($attrow->label));

	 	}
		} //end if attribute module exists


		$total_sell = 0;
		foreach ($customers as $customer) {
			$temparray = array();
			$temparray[]=  $customer->qty;
			$temparray[]=  l( t(check_plain($customer->nameandfamily)) , 'user/' . $customer->uid);
			$temparray[]=  $customer->ncode;
			$temparray[]=  $customer->phone;
			$temparray[]=  l( t(check_plain($customer->name)) , 'user/' . $customer->uid);
			$temparray[]=  l( t($customer->email), 'mailto:' . $customer->email);
			$temparray[]=  number_format($customer->price,0);
			$temparray[]=  number_format($customer->total,0);
			$temparray[]=  format_date($customer->date, 'date_time');
			$temparray[]=  l(t($customer->status),'admin/store/orders/' . $customer->id);
			$temparray[]=  l(t("#" . $customer->id),'admin/store/orders/' . $customer->id);

			$email_addresses[] = $customer->email;  //add to the list

			$mydata=unserialize($customer->orderdata);
			$total_sell += $customer->total;
			
			if (isset($attrlist)){
				foreach ($attrlist as $myattrib) {
				  if(isset($mydata['attributes'][$myattrib['data']])){
					 $thisdatum = $mydata['attributes'][$myattrib['data']]; //might be null
				     if (is_array($thisdatum) == 1) {   //Since UC 6.x-2.0-rc6, attributes are stored as arrays just in case there is more than one selected.
				 	    $temparray[] = check_plain(implode(' | ', $thisdatum));
				     }	//end if isarray	  
				  
				  }//end if isset
				  else{// need a placeholder to keep table aligned
				    $temparray[]=NULL;
				  }

				}//end for each
			}// end if attr

			$rows[] = $temparray;
			if (empty($rows)) {
				$rows[] = array(array('data' => t('No customers found for this item'), 'colspan' => count($header)));
			}

		}
		if (!empty($rows)) {
		  $rows[] = array('','','','','', 'مجموع', number_format($total_sell,0) ,'','');
		  $output .= theme('table' ,array('header'=>$header,'rows'=>$rows,'width' => '100%', 'class' => 'uc-sales-table') );
		  $output .= '<div class="uc-reports-links">';

		  $output .= l(t('Export rows to csv file'), "admin/store/reports/uc_who_bought_what", array('query'=> array('csv'=> "TRUE", 'pid' =>$product_id)));

		  $output .= '<div class="email-addresses"><h4>Email Addresses</h4><label for="email-addresses-textarea" value="Email addresses:" /><textarea id="email-addresses-textarea" rows="5" cols="100">' . implode(', ', $email_addresses). '</textarea></div>';
        }
		else{
		  $output .= "no results found please go back and pick another item";
		}
		return $output;
	}

}



?>